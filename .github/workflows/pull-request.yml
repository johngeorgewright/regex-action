name: 𝌡   Pull Request

on:
  pull_request:
    branches: [master]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: 🚚  Checkout project
        uses: actions/checkout@v4

      - name: Test Single Line
        id: test1
        uses: ./
        with:
          debug: 'true'
          ref: refs/tags/@johngw/my-package-v1.2.3
          regex: refs/tags/(?P<package>@johngw/[a-zA-Z0-9_-]+)-v(?P<version>\d+.\d+.\d+)$

      - name: 🧪  Assert Package
        if: steps.test1.outputs.package != '@johngw/my-package'
        run: | # shell
          echo "'${{ steps.test1.outputs.package }}' does not equal '@johngw/my-package'"
          exit 1

      - name: 🧪  Assert Version
        if: steps.test1.outputs.version != '1.2.3'
        run: | # shell
          echo "'${{ steps.test1.outputs.version }}' does not equal '1.2.3'"
          exit 1

      - name: Test Multiline
        id: test2
        uses: ./
        with:
          debug: 'true'
          ref: |
            h
            e
            l
            l
            o
          regex: '[\n\r]*(?P<letter>h)'

      - name: 🧪  Assert Multiline
        if: steps.test2.outputs.letter != 'h'
        run: | # shell
          echo "'${{ steps.test2.outputs.letter }}' does not equal 'h'"
          exit 1

      - name: Test Single Line
        id: test3
        uses: ./
        with:
          asJSON: true
          debug: 'true'
          ref: refs/tags/@johngw/my-package-v1.2.3
          regex: refs/tags/(?P<package>@johngw/[a-zA-Z0-9_-]+)-v(?P<version>\d+.\d+.\d+)$

      - name: 🧪  Assert JSON
        run: |
          PACKAGE='${{ fromJSON(steps.test1.outputs.groups).package }}'
          VERSION='${{ fromJSON(steps.test1.outputs.groups).version }}'
          if [[ $PACKAGE != '@johngw/my-package' ]]
          then
            echo "$PACKAGE does not equal '@johngw/my-package'"
            exit 1
          fi
          if [[ $VERSION != '1.2.3' ]]
          then
            echo "$VERSION does not equal '1.2.3'"
            exit 1
          fi
